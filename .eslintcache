[{"C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\index.tsx":"1","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"2","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\components\\AddItemForm\\AddItemForm.tsx":"3","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\app\\App.tsx":"4","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\app\\app-reducer.ts":"5","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\features\\TodolistsList\\tasks-reducer.ts":"6","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\features\\TodolistsList\\todolists-reducer.ts":"7","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\features\\TodolistsList\\TodolistsList.tsx":"8","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"9","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\app\\store.ts":"10","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\components\\EditableSpan\\EditableSpan.tsx":"11"},{"size":664,"mtime":1629332373456,"results":"12","hashOfConfig":"13"},{"size":4011,"mtime":1629384503693,"results":"14","hashOfConfig":"13"},{"size":1652,"mtime":1630351256017,"results":"15","hashOfConfig":"13"},{"size":1546,"mtime":1631296535770,"results":"16","hashOfConfig":"13"},{"size":1157,"mtime":1629376232992,"results":"17","hashOfConfig":"13"},{"size":6721,"mtime":1629385763943,"results":"18","hashOfConfig":"13"},{"size":5746,"mtime":1629383242719,"results":"19","hashOfConfig":"13"},{"size":3799,"mtime":1629380544813,"results":"20","hashOfConfig":"13"},{"size":1773,"mtime":1629332373453,"results":"21","hashOfConfig":"13"},{"size":1099,"mtime":1629332373450,"results":"22","hashOfConfig":"13"},{"size":952,"mtime":1629332373452,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"77e9qy",{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\index.tsx",[],["49","50"],"C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["51","52","53","54","55","56"],"import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from '../../../components/AddItemForm/AddItemForm'\r\nimport {EditableSpan} from '../../../components/EditableSpan/EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task/Task'\r\nimport {TaskStatuses, TaskType} from '../../../api/todolists-api'\r\nimport {FilterValuesType} from '../todolists-reducer'\r\nimport {useDispatch} from 'react-redux'\r\nimport {fetchTasksTC} from '../tasks-reducer'\r\nimport {RequestStatusType} from \"../../../app/app-reducer\";\r\n\r\ntype PropsType = {\r\n    id: string\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    filter: FilterValuesType\r\n    entityStatus: RequestStatusType\r\n}\r\n\r\nexport const Todolist = React.memo(function (props: PropsType) {\r\n    console.log('Todolist called')\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        const thunk = fetchTasksTC(props.id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.id)\r\n    }, [props.addTask, props.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.id, title)\r\n    }, [props.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.id), [props.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.id), [props.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.id), [props.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.title} onChange={changeTodolistTitle}/>\r\n            <IconButton onClick={removeTodolist} disabled={props.entityStatus ===\"loading\"}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask} entityStatus={props.entityStatus}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.id}\r\n                                                removeTask={props.removeTask}\r\n                                                changeTaskTitle={props.changeTaskTitle}\r\n                                                changeTaskStatus={props.changeTaskStatus}\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\components\\AddItemForm\\AddItemForm.tsx",[],"C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\app\\App.tsx",[],"C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\app\\app-reducer.ts",[],"C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\features\\TodolistsList\\tasks-reducer.ts",[],"C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\features\\TodolistsList\\todolists-reducer.ts",[],"C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\features\\TodolistsList\\TodolistsList.tsx",["57","58","59","60","61","62","63","64"],"C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["65","66","67"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from '../../../../components/EditableSpan/EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from '../../../../api/todolists-api'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\app\\store.ts",[],"C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\components\\EditableSpan\\EditableSpan.tsx",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":35,"column":8,"nodeType":"74","endLine":35,"endColumn":10,"suggestions":"75"},{"ruleId":"72","severity":1,"message":"76","line":39,"column":8,"nodeType":"74","endLine":39,"endColumn":33,"suggestions":"77"},{"ruleId":"72","severity":1,"message":"76","line":46,"column":8,"nodeType":"74","endLine":46,"endColumn":45,"suggestions":"78"},{"ruleId":"72","severity":1,"message":"76","line":48,"column":86,"nodeType":"74","endLine":48,"endColumn":116,"suggestions":"79"},{"ruleId":"72","severity":1,"message":"76","line":49,"column":92,"nodeType":"74","endLine":49,"endColumn":122,"suggestions":"80"},{"ruleId":"72","severity":1,"message":"76","line":50,"column":98,"nodeType":"74","endLine":50,"endColumn":128,"suggestions":"81"},{"ruleId":"72","severity":1,"message":"82","line":27,"column":8,"nodeType":"74","endLine":27,"endColumn":10,"suggestions":"83"},{"ruleId":"72","severity":1,"message":"84","line":32,"column":8,"nodeType":"74","endLine":32,"endColumn":10,"suggestions":"85"},{"ruleId":"72","severity":1,"message":"84","line":37,"column":8,"nodeType":"74","endLine":37,"endColumn":10,"suggestions":"86"},{"ruleId":"72","severity":1,"message":"84","line":42,"column":8,"nodeType":"74","endLine":42,"endColumn":10,"suggestions":"87"},{"ruleId":"72","severity":1,"message":"84","line":47,"column":8,"nodeType":"74","endLine":47,"endColumn":10,"suggestions":"88"},{"ruleId":"72","severity":1,"message":"84","line":52,"column":8,"nodeType":"74","endLine":52,"endColumn":10,"suggestions":"89"},{"ruleId":"72","severity":1,"message":"84","line":57,"column":8,"nodeType":"74","endLine":57,"endColumn":10,"suggestions":"90"},{"ruleId":"72","severity":1,"message":"84","line":62,"column":8,"nodeType":"74","endLine":62,"endColumn":10,"suggestions":"91"},{"ruleId":"72","severity":1,"message":"76","line":15,"column":97,"nodeType":"74","endLine":15,"endColumn":130,"suggestions":"92"},{"ruleId":"72","severity":1,"message":"76","line":20,"column":8,"nodeType":"74","endLine":20,"endColumn":41,"suggestions":"93"},{"ruleId":"72","severity":1,"message":"76","line":24,"column":8,"nodeType":"74","endLine":24,"endColumn":41,"suggestions":"94"},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.id'. Either include them or remove the dependency array.","ArrayExpression",["97"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["98"],["99"],["100"],["101"],["102"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["103"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["104"],["105"],["106"],["107"],["108"],["109"],["110"],["111"],["112"],["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"116","fix":"118"},{"desc":"116","fix":"119"},{"desc":"116","fix":"120"},{"desc":"116","fix":"121"},{"desc":"122","fix":"123"},{"desc":"122","fix":"124"},{"desc":"122","fix":"125"},{"desc":"122","fix":"126"},{"desc":"122","fix":"127"},{"desc":"122","fix":"128"},{"desc":"122","fix":"129"},{"desc":"122","fix":"130"},{"desc":"116","fix":"131"},{"desc":"116","fix":"132"},{"desc":"116","fix":"133"},"Update the dependencies array to be: [dispatch, props.id]",{"range":"134","text":"135"},"Update the dependencies array to be: [props]",{"range":"136","text":"137"},{"range":"138","text":"137"},{"range":"139","text":"137"},{"range":"140","text":"137"},{"range":"141","text":"137"},"Update the dependencies array to be: [dispatch]",{"range":"142","text":"143"},{"range":"144","text":"143"},{"range":"145","text":"143"},{"range":"146","text":"143"},{"range":"147","text":"143"},{"range":"148","text":"143"},{"range":"149","text":"143"},{"range":"150","text":"143"},{"range":"151","text":"137"},{"range":"152","text":"137"},{"range":"153","text":"137"},[1473,1475],"[dispatch, props.id]",[1581,1606],"[props]",[1819,1856],[1946,1976],[2070,2100],[2200,2230],[1049,1051],"[dispatch]",[1220,1222],[1391,1393],[1596,1598],[1809,1811],[2010,2012],[2157,2159],[2336,2338],[765,798],[1071,1104],[1261,1294]]