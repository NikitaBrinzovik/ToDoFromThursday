[{"C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\index.tsx":"1","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"2","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\components\\AddItemForm\\AddItemForm.tsx":"3","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\app\\App.tsx":"4","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\app\\app-reducer.ts":"5","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\features\\TodolistsList\\tasks-reducer.ts":"6","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\features\\TodolistsList\\todolists-reducer.ts":"7","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\features\\TodolistsList\\TodolistsList.tsx":"8","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"9","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\app\\store.ts":"10","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\components\\EditableSpan\\EditableSpan.tsx":"11","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"12","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\utils\\error-utils.ts":"13","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\features\\Login\\Login.tsx":"14","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\api\\todolists-api.ts":"15","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\features\\Login\\auth-Reducer.ts":"16"},{"size":776,"mtime":1631533941002,"results":"17","hashOfConfig":"18"},{"size":4020,"mtime":1631455932025,"results":"19","hashOfConfig":"18"},{"size":1642,"mtime":1631456112063,"results":"20","hashOfConfig":"18"},{"size":3281,"mtime":1631606716721,"results":"21","hashOfConfig":"18"},{"size":2039,"mtime":1631817817220,"results":"22","hashOfConfig":"18"},{"size":7321,"mtime":1631460250030,"results":"23","hashOfConfig":"18"},{"size":6733,"mtime":1631458685465,"results":"24","hashOfConfig":"18"},{"size":4292,"mtime":1631602736876,"results":"25","hashOfConfig":"18"},{"size":1773,"mtime":1629332373453,"results":"26","hashOfConfig":"18"},{"size":1123,"mtime":1631555956744,"results":"27","hashOfConfig":"18"},{"size":952,"mtime":1629332373452,"results":"28","hashOfConfig":"18"},{"size":1304,"mtime":1631444791798,"results":"29","hashOfConfig":"18"},{"size":790,"mtime":1631459026480,"results":"30","hashOfConfig":"18"},{"size":5312,"mtime":1631607027055,"results":"31","hashOfConfig":"18"},{"size":3230,"mtime":1631817370383,"results":"32","hashOfConfig":"18"},{"size":1973,"mtime":1631606597782,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"77e9qy",{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\index.tsx",[],["70","71"],"C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["72","73","74","75","76","77"],"import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from '../../../components/AddItemForm/AddItemForm'\r\nimport {EditableSpan} from '../../../components/EditableSpan/EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task/Task'\r\nimport {TaskStatuses, TaskType} from '../../../api/todolists-api'\r\nimport {FilterValuesType} from '../todolists-reducer'\r\nimport {useDispatch} from 'react-redux'\r\nimport {fetchTasksTC} from '../tasks-reducer'\r\nimport {RequestStatusType} from \"../../../app/app-reducer\";\r\n\r\ntype PropsType = {\r\n    id: string\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    filter: FilterValuesType\r\n    entityStatus: RequestStatusType\r\n}\r\n\r\nexport const Todolist = React.memo(function (props: PropsType) {\r\n    console.log('Todolist called')\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        const thunk = fetchTasksTC(props.id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.id)\r\n    }, [props.addTask, props.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.id, title)\r\n    }, [props.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.id), [props.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.id), [props.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.id), [props.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.title} onChange={changeTodolistTitle}/>\r\n            <IconButton onClick={removeTodolist} disabled={props.entityStatus ===\"loading\"}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask} disabled={props.entityStatus ===\"loading\"}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.id}\r\n                                                removeTask={props.removeTask}\r\n                                                changeTaskTitle={props.changeTaskTitle}\r\n                                                changeTaskStatus={props.changeTaskStatus}\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n","C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\components\\AddItemForm\\AddItemForm.tsx",["78"],"C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\app\\App.tsx",["79"],"C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\app\\app-reducer.ts",[],"C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\features\\TodolistsList\\tasks-reducer.ts",[],"C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\features\\TodolistsList\\todolists-reducer.ts",[],"C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\features\\TodolistsList\\TodolistsList.tsx",["80","81","82","83","84","85","86","87"],"C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["88","89","90"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from '../../../../components/EditableSpan/EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from '../../../../api/todolists-api'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n",["91","92"],"C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\app\\store.ts",[],"C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],"C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\utils\\error-utils.ts",[],"C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\features\\Login\\Login.tsx",["93"],"C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\api\\todolists-api.ts",[],"C:\\Users\\knana\\OneDrive\\Рабочий стол\\incubator\\ToDoFromThursday\\src\\features\\Login\\auth-Reducer.ts",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":35,"column":8,"nodeType":"100","endLine":35,"endColumn":10,"suggestions":"101"},{"ruleId":"98","severity":1,"message":"102","line":39,"column":8,"nodeType":"100","endLine":39,"endColumn":33,"suggestions":"103"},{"ruleId":"98","severity":1,"message":"102","line":46,"column":8,"nodeType":"100","endLine":46,"endColumn":45,"suggestions":"104"},{"ruleId":"98","severity":1,"message":"102","line":48,"column":86,"nodeType":"100","endLine":48,"endColumn":116,"suggestions":"105"},{"ruleId":"98","severity":1,"message":"102","line":49,"column":92,"nodeType":"100","endLine":49,"endColumn":122,"suggestions":"106"},{"ruleId":"98","severity":1,"message":"102","line":50,"column":98,"nodeType":"100","endLine":50,"endColumn":128,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":4,"column":9,"nodeType":"110","messageId":"111","endLine":4,"endColumn":26},{"ruleId":"98","severity":1,"message":"112","line":23,"column":8,"nodeType":"100","endLine":23,"endColumn":10,"suggestions":"113"},{"ruleId":"98","severity":1,"message":"114","line":32,"column":8,"nodeType":"100","endLine":32,"endColumn":10,"suggestions":"115"},{"ruleId":"98","severity":1,"message":"116","line":37,"column":8,"nodeType":"100","endLine":37,"endColumn":10,"suggestions":"117"},{"ruleId":"98","severity":1,"message":"116","line":42,"column":8,"nodeType":"100","endLine":42,"endColumn":10,"suggestions":"118"},{"ruleId":"98","severity":1,"message":"116","line":47,"column":8,"nodeType":"100","endLine":47,"endColumn":10,"suggestions":"119"},{"ruleId":"98","severity":1,"message":"116","line":52,"column":8,"nodeType":"100","endLine":52,"endColumn":10,"suggestions":"120"},{"ruleId":"98","severity":1,"message":"116","line":57,"column":8,"nodeType":"100","endLine":57,"endColumn":10,"suggestions":"121"},{"ruleId":"98","severity":1,"message":"116","line":62,"column":8,"nodeType":"100","endLine":62,"endColumn":10,"suggestions":"122"},{"ruleId":"98","severity":1,"message":"116","line":67,"column":8,"nodeType":"100","endLine":67,"endColumn":10,"suggestions":"123"},{"ruleId":"98","severity":1,"message":"102","line":15,"column":97,"nodeType":"100","endLine":15,"endColumn":130,"suggestions":"124"},{"ruleId":"98","severity":1,"message":"102","line":20,"column":8,"nodeType":"100","endLine":20,"endColumn":41,"suggestions":"125"},{"ruleId":"98","severity":1,"message":"102","line":24,"column":8,"nodeType":"100","endLine":24,"endColumn":41,"suggestions":"126"},{"ruleId":"94","replacedBy":"127"},{"ruleId":"96","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":57,"column":28,"nodeType":"131","endLine":57,"endColumn":45},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.id'. Either include them or remove the dependency array.","ArrayExpression",["134"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["135"],["136"],["137"],["138"],["139"],"@typescript-eslint/no-unused-vars","'RequestStatusType' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["140"],"React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.",["141"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["142"],["143"],["144"],["145"],["146"],["147"],["148"],["149"],["150"],["151"],["132"],["133"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"154","fix":"156"},{"desc":"154","fix":"157"},{"desc":"154","fix":"158"},{"desc":"154","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"160","fix":"164"},{"desc":"160","fix":"165"},{"desc":"160","fix":"166"},{"desc":"160","fix":"167"},{"desc":"160","fix":"168"},{"desc":"160","fix":"169"},{"desc":"160","fix":"170"},{"desc":"154","fix":"171"},{"desc":"154","fix":"172"},{"desc":"154","fix":"173"},"Update the dependencies array to be: [dispatch, props.id]",{"range":"174","text":"175"},"Update the dependencies array to be: [props]",{"range":"176","text":"177"},{"range":"178","text":"177"},{"range":"179","text":"177"},{"range":"180","text":"177"},{"range":"181","text":"177"},"Update the dependencies array to be: [dispatch]",{"range":"182","text":"183"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"184","text":"185"},{"range":"186","text":"183"},{"range":"187","text":"183"},{"range":"188","text":"183"},{"range":"189","text":"183"},{"range":"190","text":"183"},{"range":"191","text":"183"},{"range":"192","text":"183"},{"range":"193","text":"177"},{"range":"194","text":"177"},{"range":"195","text":"177"},[1473,1475],"[dispatch, props.id]",[1581,1606],"[props]",[1819,1856],[1946,1976],[2070,2100],[2200,2230],[1262,1264],"[dispatch]",[1303,1305],"[demo, dispatch, isLoggedIn]",[1474,1476],[1645,1647],[1850,1852],[2063,2065],[2264,2266],[2411,2413],[2590,2592],[765,798],[1071,1104],[1261,1294]]